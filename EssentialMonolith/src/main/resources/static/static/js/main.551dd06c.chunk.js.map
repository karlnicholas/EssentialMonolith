{"version":3,"sources":["http-common.js","Home.js","Planning.js","Analysis.js","App.js","index.js"],"names":["axios","create","baseURL","headers","Home","state","employees","columns","dataField","text","http","get","then","response","setState","data","Container","bootstrap4","keyField","this","React","Component","Planning","worklogs","handlePopulateClick","window","location","reload","Analysis","props","analysisRun","lastRunDateTime","count","dimensions","dropdownTitles","dropdownIds","queryStats","onTargetSelect","bind","onClick","titles","slice","Array","analysisDimensions","length","fill","ids","Date","lastRunTime","factCount","catch","errors","name","id","index","i","queryString","queryMark","select","console","log","Table","Button","Intl","DateTimeFormat","year","month","day","hour","minute","second","format","String","populating","map","dimension","tableHeaders","dlist","DropdownButton","title","DropdownItem","value","onSelect","dvalue","tableBody","sum","toLocaleString","mean","min","max","standardDeviation","queryResultDisplay","App","className","to","exact","path","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.551dd06c.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nexport default axios.create({\r\n  baseURL: \"http://localhost:8080/api\",\r\n  headers: {\r\n    \"Content-type\": \"application/json\"\r\n  }\r\n});","import React from \"react\";\r\nimport http from \"./http-common\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\n\r\nexport default class Home extends React.Component {\r\n  state = {\r\n    employees: [],\r\n    columns: [\r\n      { dataField: \"id\", text: \"Product ID\" },\r\n      { dataField: \"name\", text: \"Product Name\" },\r\n      { dataField: \"department.name\", text: \"Department\" }\r\n    ]\r\n  }\r\n  componentDidMount() {\r\n    http.get('/hr').then(response => {\r\n      this.setState({\r\n        employees: response.data\r\n      });\r\n    });\r\n  }\r\n  render() {\r\n    return (\r\n      <Container>\r\n        <BootstrapTable\r\n          bootstrap4\r\n          keyField='id'\r\n          data={this.state.employees}\r\n          columns={this.state.columns} />\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport http from \"./http-common\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\n\r\nexport default class Planning extends React.Component {\r\n  state = {\r\n    worklogs: [],\r\n    columns: [\r\n      { dataField: \"id\", text: \"ID\" },\r\n      { dataField: \"entryDate\", text: \"Entry Date\" },\r\n      { dataField: \"hours\", text: \"Hours\" },\r\n      { dataField: \"rate\", text: \"Rate\" },\r\n      { dataField: \"project.name\", text: \"Project\" },\r\n      { dataField: \"project.client.name\", text: \"Client\" },\r\n      { dataField: \"employee.name\", text: \"Employee\" },\r\n      { dataField: \"employee.department.name\", text: \"Department\" }\r\n    ]\r\n  }\r\n  componentDidMount() {\r\n    http.get('/planning').then(response => {\r\n      this.setState({\r\n        worklogs: response.data\r\n      });\r\n    });\r\n  }\r\n  render() {\r\n    return (\r\n      <Container>\r\n        <BootstrapTable\r\n          keyField='id'\r\n          bootstrap4\r\n          data={this.state.worklogs}\r\n          columns={this.state.columns} />\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport http from \"./http-common\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport DropdownButton from \"react-bootstrap/DropdownButton\";\r\nimport Table from \"react-bootstrap/Table\";\r\nimport DropdownItem from 'react-bootstrap/esm/DropdownItem';\r\n\r\nfunction handlePopulateClick() {\r\n  http.get('/analysis/populate');\r\n  window.location.reload();\r\n}\r\n\r\nexport default class Analysis extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      analysisRun: '',\r\n      lastRunDateTime: '',\r\n      count: 0,\r\n      dimensions: [],\r\n      dropdownTitles: [],\r\n      dropdownIds: [],\r\n      queryStats: null\r\n    }\r\n    this.onTargetSelect = this.onTargetSelect.bind(this);\r\n    this.onClick = this.onClick.bind(this);\r\n  }\r\n  componentDidMount() {\r\n    http.get('/analysis').then(response => {\r\n      let titles = this.state.dropdownTitles.slice(); //creates the clone of the state\r\n      titles = new Array(response.data.analysisDimensions.length).fill(\"\");\r\n      let ids = this.state.dropdownIds.slice(); //creates the clone of the state\r\n      ids = new Array(response.data.analysisDimensions.length).fill(null);\r\n      this.setState({\r\n        analysisRun: response.data.analysisRun,\r\n        lastRunDateTime: new Date(response.data.analysisRun.lastRunTime),\r\n        count: response.data.factCount,\r\n        dimensions: response.data.analysisDimensions,\r\n        dropdownTitles: titles, \r\n        dropdownIds: ids\r\n      });\r\n      // use/access the results \r\n    }).catch(errors => {\r\n      // react on errors.\r\n    })\r\n  }\r\n  onTargetSelect(name, id, index) {\r\n    let titles = this.state.dropdownTitles.slice(); //creates the clone of the state\r\n    titles[index] = name;\r\n    let ids = this.state.dropdownIds.slice(); //creates the clone of the state\r\n    ids[index] = id;\r\n    this.setState({ dropdownTitles: titles, dropdownIds: ids });\r\n  }\r\n  onClick() {\r\n    var queryString = '';\r\n    var queryMark = '?';\r\n    var i;\r\n    for (i = 0; i < this.state.dropdownTitles.length; ++i) {\r\n      var select = this.state.dropdownIds[i];\r\n      if (select !== null) {\r\n        queryString += queryMark + this.state.dimensions[i].name + '=' + select;\r\n        queryMark = '&';\r\n      }\r\n    }\r\n    http.get('/analysis/billingresult' + queryString).then(response => {\r\n      this.setState({\r\n        queryStats: response.data\r\n      });\r\n      console.log(this.state.queryStats);\r\n    })\r\n  }\r\n  render() {\r\n    const tableHeaders = () => {\r\n      if (this.state.dimensions.length > 0) {\r\n        return (\r\n          this.state.dimensions.map(dimension => <th key={dimension.name}>{dimension.name}</th>)\r\n          );\r\n      }\r\n    }\r\n    const tableBody = () => {\r\n      if (this.state.dimensions.length > 0) {\r\n        return (this.state.dimensions.map((dlist, index) =>\r\n          <td key={dlist.name}>\r\n            <DropdownButton id={dlist.name} title={this.state.dropdownTitles[index]}><DropdownItem value=\"\" onSelect={() => this.onTargetSelect(\"\", null, index)}>&nbsp;</DropdownItem>\r\n              {dlist.dimensions.map(dvalue =>\r\n                <DropdownItem key={dvalue.id} value={dvalue.id} onSelect={() => this.onTargetSelect(dvalue.name, dvalue.id, index)}>\r\n                  {dvalue.name}\r\n                </DropdownItem>)}\r\n            </DropdownButton>\r\n          </td>));\r\n      }\r\n    }\r\n    let { queryStats } = this.state;\r\n    const queryResultDisplay = () => {\r\n      if (queryStats != null) {\r\n        return (\r\n          <Table>\r\n            <thead>\r\n              <tr><th>Amount</th><th>Mean</th><th>Min</th><th>Max</th><th>Std. Dev.</th></tr>\r\n            </thead>\r\n            <tbody>\r\n              <tr><td>{queryStats.sum.toLocaleString()}</td><td>{queryStats.mean.toLocaleString()}</td><td>{queryStats.min.toLocaleString()}</td><td>{queryStats.max.toLocaleString()}</td><td>{queryStats.standardDeviation.toLocaleString()}</td></tr>\r\n            </tbody>\r\n          </Table>\r\n        );\r\n      }\r\n    }\r\n    return (\r\n      <Container>\r\n        <Table>\r\n          <thead>\r\n            <tr><th>Populate</th><th>Current Count</th><th>Last Run Time</th><th>Populating</th></tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr><td><Button onClick={handlePopulateClick}>Populate</Button></td><td>{this.state.count}</td><td>{new Intl.DateTimeFormat('en-US', { year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit', second: '2-digit' }).format(this.state.lastRunDateTime)}</td><td>{String(this.state.analysisRun.populating)}</td></tr>\r\n          </tbody>\r\n        </Table>\r\n        <Table>\r\n          <thead>\r\n          <tr><th>Query</th>{tableHeaders()}</tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr><td><Button onClick={() => this.onClick()}>Query</Button></td>{tableBody()}</tr>\r\n          </tbody>\r\n        </Table>\r\n        {queryResultDisplay()}\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Switch, Route, Link } from \"react-router-dom\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nimport Home from \"./Home\";\r\nimport Planning from \"./Planning\";\r\nimport Analysis from \"./Analysis\";\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <nav className=\"navbar navbar-expand navbar-dark bg-dark\">\r\n          <Link to={\"/\"} className=\"navbar-brand\">\r\n            Home\r\n          </Link>\r\n          <div className=\"navbar-nav mr-auto\">\r\n            <li className=\"nav-item\">\r\n              <Link to={\"/planning\"} className=\"nav-link\">\r\n                Planning\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link to={\"/analysis\"} className=\"nav-link\">\r\n                Analysis\r\n              </Link>\r\n            </li>\r\n          </div>\r\n        </nav>\r\n\r\n        <div className=\"container mt-3\">\r\n          <Switch>\r\n          <Route exact path=\"/\" component={Home} />\r\n            <Route path=\"/planning\" component={Planning} />\r\n            <Route path=\"/analysis\" component={Analysis} />\r\n          </Switch>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\n\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <App />\r\n  </BrowserRouter>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}